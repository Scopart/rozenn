/* * Copyright the original author or authors. *  * Licensed under the MOZILLA PUBLIC LICENSE, Version 1.1 (the "License"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at *  *      http://www.mozilla.org/MPL/MPL-1.1.html *  * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */package org.rozenn{    import org.rozenn.formatter.IFormatter;    /**     * A <code>LogRecord</code> encapsulates the details of your desired log request.      *      * @author Alexis Couronne     */    public class LogRecord    {        /**         * @private         */        private var logger : Logger;        /**         * @private         */        private var level : Level;        /**         * @private         */        private var message : *;        /**         * @private         */        private var date : Date;        /**         * @private         */        private var formatter : IFormatter;        /**         * Build a <code>LogRecord</code> instance.         *          * @param logger	the logger emitter of this <code>LogRecord</code> object         * @param level		the level for this <code>LogRecord</code> object         * @param message	the message of this <code>LogRecord</code> object         * @param formatter	the formatter for this <code>LogRecord</code> object         * @param date		the date of this <code>LogRecord</code> object         */        public function LogRecord(logger : Logger, level : Level, message : *, formatter : IFormatter = null, date : Date = null)        {            this.logger = logger;            this.level = level;            this.message = message;            this.date = date != null ? date : new Date();            this.formatter = formatter;        }        /**         * Return the logger emitter of this <code>LogRecord</code> object         *          * @return the logger emitter of this <code>LogRecord</code> object         */        public function getLogger() : Logger        {            return logger;        }        /**         * Return the level for this <code>LogRecord</code> object         *          * @return the level for this <code>LogRecord</code> object         */        public function getLevel() : Level        {            return level;        }        /**         * Return the message of this <code>LogRecord</code> object         *          * @return the message of this <code>LogRecord</code> object         */        public function getMessage() : *        {            return message;        }        /**         * Return the date of this <code>LogRecord</code> object         *          * @return the date of this <code>LogRecord</code> object         */        public function getDate() : Date        {            return date;        }        /**         * Return the formatter for this <code>LogRecord</code> object         *          * @return the formatter for this <code>LogRecord</code> object         */        public function getFormatter() : IFormatter        {            return formatter;        }    }}